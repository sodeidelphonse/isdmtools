% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SpatialFolds.R
\name{plot.DataFolds}
\alias{plot.DataFolds}
\title{Plot block cross-validation folds for multiple datasets}
\usage{
\method{plot}{DataFolds}(x, ...)
}
\arguments{
\item{x}{A \code{DataFolds} S3 object.}

\item{...}{Additional arguments (not used by this method).}
}
\value{
A \code{ggplot2} object that can be printed or saved.
}
\description{
A method to visualize the spatial blocks and the corresponding train/test
partitions for each fold of a \code{DataFolds} object.
}
\examples{
\dontrun{
# Create some dummy sf data
library(sf)
library(dplyr)

set.seed(42)
presence_data <- data.frame(
  x = runif(100, 0, 4),
  y = runif(100, 6, 13),
  site = rbinom(100, 1, 0.6)
) \%>\%
  st_as_sf(coords = c("x", "y"), crs = 4326)

count_data <- data.frame(
  x = runif(50, 0, 4),
  y = runif(50, 6, 13),
  count = rpois(50, 5)
) \%>\%
  st_as_sf(coords = c("x", "y"), crs = 4326)

# Create a list of datasets
datasets_list <- list(Presence = presence_data, Count = count_data)

# Create a dummy polygon for the region (e.g., Benin)
ben_utm_coords <- matrix(c(0, 6, 4, 6, 4, 13, 0, 13, 0, 6), ncol = 2, byrow = TRUE)
ben_utm <- st_sfc(st_polygon(list(ben_utm_coords)), crs = 4326)
ben_utm <- st_sf(data.frame(name = "Benin"), ben_utm)

# Create a DataFolds object for the example
my_folds <- create_folds(datasets_list, ben_utm, k = 5)

# Now you can plot the object
plot_cv <- plot(my_folds)
print(plot_cv)

# You can even customize the plot output by adjusting the axes breaks
plot_cv <- plot_cv +
  ggplot2::scale_x_continuous(breaks = seq(0, 4, 1)) +
  ggplot2::scale_y_continuous(breaks = seq(6, 13, 2))
print(plot_cv)
}

}
\seealso{
Other spatial blocking: 
\code{\link{create_folds}()},
\code{\link{extract_fold}()},
\code{\link{extract_fold.DataFolds}()},
\code{\link{print.DataFolds}()}
}
\concept{spatial blocking}
