% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Mapping.R
\name{generate_maps}
\alias{generate_maps}
\title{Generate Multi-panel Maps from Spatial Model Predictions}
\usage{
generate_maps(
  data_to_plot,
  vars_to_plot = c("mean", "sd"),
  base_map = NULL,
  layer_map = NULL,
  color_gradient = rainbow(5),
  legend_title = NULL,
  panel_labels = NULL,
  nrow = NULL,
  x_axis_breaks = NULL,
  y_axis_breaks = NULL
)
}
\arguments{
\item{data_to_plot}{A data frame, \code{sf} or \code{SpatRaster} object containing the prediction data.
For grid-based data frame, it must contain columns named "X" and "Y" representing pixels' coordinates.}

\item{vars_to_plot}{A character vector of column names in \code{data_to_plot} to be
plotted on separate panels.}

\item{base_map}{An \code{sf} object to be plotted as a base layer underneath the
prediction data (e.g., a background simple polygon). Defaults to \code{NULL}.}

\item{layer_map}{An optional \code{sf} object representing the additional layer (e.g. line or point geometry).
It is plotted on top of the prediction maps for context. Defaults to \code{NULL}.}

\item{color_gradient}{A vector of colors to be used in the fill/color gradient.
Defaults to \code{rainbow(5)}.}

\item{legend_title}{A character string for the title of the color legend.}

\item{panel_labels}{An optional character vector of labels for the facet panels.
The order should correspond to \code{vars_to_plot}.}

\item{nrow}{The number of rows for \code{ggplot2::facet_wrap()}. Defaults to an
optimal layout chosen by \code{ggplot2}.}

\item{x_axis_breaks}{A numeric vector specifying the breaks for the x-axis.}

\item{y_axis_breaks}{A numeric vector specifying the breaks for the y-axis.}
}
\value{
A \code{ggplot} object representing the multi-panel plot that be customized by the user.
}
\description{
This function creates a multi-panel map for visualizing multiple prediction
variables from a species distribution model or other spatial model. It is
designed to be flexible, handling both grid-based (data.frame) and
point-based (sf) spatial predictions.
}
\details{
The function internally reshapes the data from a wide format (with a column
for each prediction variable) to a long format suitable for plotting with \code{ggplot2::facet_wrap()}.
It automatically selects the appropriate geometry (\code{geom_tile()} for grids and \code{geom_sf()} for points) and conditional scales.
Users can also add to the map other spatial vector layers or customize the plot using ggplot2 syntax if needed.
}
\examples{
\dontrun{
# --- Example with grid-based data ---
# Simulate a data frame with coordinates and two prediction variables
grid_data <- expand.grid(X = 1:100, Y = 1:100)
grid_data$mean <- rnorm(10000, mean = grid_data$X / 100, sd = 0.1)
grid_data$sd <- rgamma(10000, shape = 2, scale = 0.2)

# Simulate a boundary map (e.g., a simple polygon)
library(sf)
boundary <- st_sfc(st_polygon(list(cbind(c(0, 100, 100, 0, 0), c(0, 0, 100, 100, 0)))))
boundary_sf <- st_sf(data.frame(id = 1), geometry = boundary)

# Generate the map
generate_maps(
  data_to_plot = grid_data,
  vars_to_plot = c("mean", "sd"),
  base_map = boundary_sf,
  layer_map = boundary_sf,
  color_gradient = c("white", "skyblue", "navy"),
  legend_title = "Prediction Value",
  panel_labels = c("Mean", "Standard Deviation"),
  nrow = 1
)

# --- Example with point-based data (sf) ---
# Simulate an sf object with point data
library(sf)
set.seed(123)
points_sf <- st_as_sf(grid_data[sample(1:10000, 1000), ],
                     coords = c("X", "Y"), crs = 32631) # UTM CRS

# Generate the map
generate_maps(
  data_to_plot = points_sf,
  vars_to_plot = c("mean", "sd"),
  base_map = boundary_sf,
  layer_map = boundary_sf,
  color_gradient = c("white", "orange", "red"),
  legend_title = "Prediction Value",
  panel_labels = c("Mean", "StDev"),
  nrow = 2
)
}

}
\concept{mapping methods}
